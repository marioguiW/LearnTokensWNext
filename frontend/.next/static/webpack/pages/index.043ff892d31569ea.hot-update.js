"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./services/auth/HttpClient.js":
/*!*************************************!*\
  !*** ./services/auth/HttpClient.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpClient: function() { return /* binding */ HttpClient; }\n/* harmony export */ });\n/* harmony import */ var nookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nookies */ \"./node_modules/nookies/dist/index.js\");\n/* harmony import */ var nookies__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(nookies__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _services_auth_tokenService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../services/auth/tokenService */ \"./services/auth/tokenService.js\");\n// Arquitetura Hexagonal\n\n\n// Ports & Adapters\nasync function HttpClient(fetchUrl) {\n    let fetchOptions = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const defaultHeaders = fetchOptions.headers || {};\n    const options = {\n        ...fetchOptions,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...defaultHeaders\n        },\n        body: fetchOptions.body ? JSON.stringify(fetchOptions.body) : null\n    };\n    return fetch(fetchUrl, options).then(async (respostaDoServidor)=>{\n        return {\n            ok: respostaDoServidor.ok,\n            status: respostaDoServidor.status,\n            statusText: respostaDoServidor.statusText,\n            body: await respostaDoServidor.json()\n        };\n    }).then(async (response)=>{\n        if (!fetchOptions.refresh) return response;\n        if (response.status !== 401) return response;\n        console.log(\"Middleware: Rodar c\\xf3digo para atualizar o token\");\n        // const isServer = Boolean(fetchOptions?.ctx);\n        // console.log(\"Testando\",fetchOptions?.ctx?.req?.cookies)\n        // const currentRefreshToken = fetchOptions?.ctx?.req?.cookies\n        // console.log(\"Current\", currentRefreshToken)\n        try {\n            // [Tentar atualizar os tokens]\n            const refreshResponse = await HttpClient(\"http://localhost:3000/api/refresh\", {\n                method: \"GET\"\n            });\n            console.log(\"1 -> \", refreshResponse);\n            const newAccessToken = refreshResponse.body.data.access_token;\n            const newRefreshToken = refreshResponse.body.data.refresh_token;\n            // [Guarda os Tokens]\n            if (isServer) {\n                nookies__WEBPACK_IMPORTED_MODULE_0___default().set(fetchOptions.ctx, \"REFRESH_TOKEN_NAME\", newRefreshToken, {\n                    httpOnly: true,\n                    sameSite: \"lax\",\n                    path: \"/\"\n                });\n            }\n            _services_auth_tokenService__WEBPACK_IMPORTED_MODULE_1__.tokenService.save(newAccessToken);\n            // [Tentar rodar o request anterior]\n            const retryResponse = await HttpClient(fetchUrl, {\n                ...options,\n                refresh: false,\n                headers: {\n                    \"Authorization\": \"Bearer \".concat(newAccessToken)\n                }\n            });\n            // console.log('retryResponse', retryResponse);\n            return retryResponse;\n        } catch (err) {\n            console.error(err);\n            return response;\n        }\n    });\n}\n_c = HttpClient;\nvar _c;\n$RefreshReg$(_c, \"HttpClient\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zZXJ2aWNlcy9hdXRoL0h0dHBDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHdCQUF3QjtBQUNNO0FBQ2tDO0FBRWhFLG1CQUFtQjtBQUNaLGVBQWVFLFdBQVdDLFFBQVE7UUFBRUMsZUFBQUEsaUVBQWUsQ0FBQztJQUN6RCxNQUFNQyxpQkFBaUJELGFBQWFFLE9BQU8sSUFBSSxDQUFDO0lBQ2hELE1BQU1DLFVBQVU7UUFDZCxHQUFHSCxZQUFZO1FBQ2ZFLFNBQVM7WUFDUCxnQkFBZ0I7WUFDaEIsR0FBR0QsY0FBYztRQUNuQjtRQUNBRyxNQUFNSixhQUFhSSxJQUFJLEdBQUdDLEtBQUtDLFNBQVMsQ0FBQ04sYUFBYUksSUFBSSxJQUFJO0lBQ2hFO0lBQ0EsT0FBT0csTUFBTVIsVUFBVUksU0FDcEJLLElBQUksQ0FBQyxPQUFPQztRQUNYLE9BQU87WUFDTEMsSUFBSUQsbUJBQW1CQyxFQUFFO1lBQ3pCQyxRQUFRRixtQkFBbUJFLE1BQU07WUFDakNDLFlBQVlILG1CQUFtQkcsVUFBVTtZQUN6Q1IsTUFBTSxNQUFNSyxtQkFBbUJJLElBQUk7UUFDckM7SUFDRixHQUNDTCxJQUFJLENBQUMsT0FBT007UUFDWCxJQUFHLENBQUNkLGFBQWFlLE9BQU8sRUFBRSxPQUFPRDtRQUNqQyxJQUFHQSxTQUFTSCxNQUFNLEtBQUssS0FBSyxPQUFPRztRQUNuQ0UsUUFBUUMsR0FBRyxDQUFDO1FBRVosK0NBQStDO1FBRS9DLDBEQUEwRDtRQUUxRCw4REFBOEQ7UUFDOUQsOENBQThDO1FBRTlDLElBQUk7WUFDRiwrQkFBK0I7WUFDL0IsTUFBTUMsa0JBQWtCLE1BQU1wQixXQUFXLHFDQUFxQztnQkFDNUVxQixRQUFRO1lBRVY7WUFFQUgsUUFBUUMsR0FBRyxDQUFDLFNBQVNDO1lBRXJCLE1BQU1FLGlCQUFpQkYsZ0JBQWdCZCxJQUFJLENBQUNpQixJQUFJLENBQUNDLFlBQVk7WUFDN0QsTUFBTUMsa0JBQWtCTCxnQkFBZ0JkLElBQUksQ0FBQ2lCLElBQUksQ0FBQ0csYUFBYTtZQUMvRCxxQkFBcUI7WUFDckIsSUFBR0MsVUFBVTtnQkFDWDdCLGtEQUFXLENBQUNJLGFBQWEyQixHQUFHLEVBQUUsc0JBQXNCSixpQkFBaUI7b0JBQ25FSyxVQUFVO29CQUNWQyxVQUFVO29CQUNWQyxNQUFNO2dCQUNSO1lBQ0Y7WUFDQWpDLHFFQUFZQSxDQUFDa0MsSUFBSSxDQUFDWDtZQUNsQixvQ0FBb0M7WUFDcEMsTUFBTVksZ0JBQWdCLE1BQU1sQyxXQUFXQyxVQUFVO2dCQUMvQyxHQUFHSSxPQUFPO2dCQUNWWSxTQUFTO2dCQUNUYixTQUFTO29CQUNQLGlCQUFpQixVQUF5QixPQUFma0I7Z0JBQzdCO1lBQ0Y7WUFDQSwrQ0FBK0M7WUFDL0MsT0FBT1k7UUFFVCxFQUFFLE9BQU1DLEtBQUs7WUFDWGpCLFFBQVFrQixLQUFLLENBQUNEO1lBQ2QsT0FBT25CO1FBQ1Q7SUFDRjtBQUNKO0tBbkVzQmhCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NlcnZpY2VzL2F1dGgvSHR0cENsaWVudC5qcz9jMWY3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEFycXVpdGV0dXJhIEhleGFnb25hbFxyXG5pbXBvcnQgbm9va2llcyBmcm9tICdub29raWVzJztcclxuaW1wb3J0IHsgdG9rZW5TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvYXV0aC90b2tlblNlcnZpY2UnO1xyXG5cclxuLy8gUG9ydHMgJiBBZGFwdGVyc1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gSHR0cENsaWVudChmZXRjaFVybCwgZmV0Y2hPcHRpb25zID0ge30pIHtcclxuICBjb25zdCBkZWZhdWx0SGVhZGVycyA9IGZldGNoT3B0aW9ucy5oZWFkZXJzIHx8IHt9O1xyXG4gIGNvbnN0IG9wdGlvbnMgPSB7XHJcbiAgICAuLi5mZXRjaE9wdGlvbnMsXHJcbiAgICBoZWFkZXJzOiB7XHJcbiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgIC4uLmRlZmF1bHRIZWFkZXJzLFxyXG4gICAgfSxcclxuICAgIGJvZHk6IGZldGNoT3B0aW9ucy5ib2R5ID8gSlNPTi5zdHJpbmdpZnkoZmV0Y2hPcHRpb25zLmJvZHkpIDogbnVsbCxcclxuICB9O1xyXG4gIHJldHVybiBmZXRjaChmZXRjaFVybCwgb3B0aW9ucylcclxuICAgIC50aGVuKGFzeW5jIChyZXNwb3N0YURvU2Vydmlkb3IpID0+IHtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBvazogcmVzcG9zdGFEb1NlcnZpZG9yLm9rLFxyXG4gICAgICAgIHN0YXR1czogcmVzcG9zdGFEb1NlcnZpZG9yLnN0YXR1cyxcclxuICAgICAgICBzdGF0dXNUZXh0OiByZXNwb3N0YURvU2Vydmlkb3Iuc3RhdHVzVGV4dCxcclxuICAgICAgICBib2R5OiBhd2FpdCByZXNwb3N0YURvU2Vydmlkb3IuanNvbigpLFxyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgLnRoZW4oYXN5bmMgKHJlc3BvbnNlKSA9PiB7XHJcbiAgICAgIGlmKCFmZXRjaE9wdGlvbnMucmVmcmVzaCkgcmV0dXJuIHJlc3BvbnNlO1xyXG4gICAgICBpZihyZXNwb25zZS5zdGF0dXMgIT09IDQwMSkgcmV0dXJuIHJlc3BvbnNlO1xyXG4gICAgICBjb25zb2xlLmxvZygnTWlkZGxld2FyZTogUm9kYXIgY8OzZGlnbyBwYXJhIGF0dWFsaXphciBvIHRva2VuJyk7XHJcbiAgICAgIFxyXG4gICAgICAvLyBjb25zdCBpc1NlcnZlciA9IEJvb2xlYW4oZmV0Y2hPcHRpb25zPy5jdHgpO1xyXG5cclxuICAgICAgLy8gY29uc29sZS5sb2coXCJUZXN0YW5kb1wiLGZldGNoT3B0aW9ucz8uY3R4Py5yZXE/LmNvb2tpZXMpXHJcbiAgICAgIFxyXG4gICAgICAvLyBjb25zdCBjdXJyZW50UmVmcmVzaFRva2VuID0gZmV0Y2hPcHRpb25zPy5jdHg/LnJlcT8uY29va2llc1xyXG4gICAgICAvLyBjb25zb2xlLmxvZyhcIkN1cnJlbnRcIiwgY3VycmVudFJlZnJlc2hUb2tlbilcclxuXHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgLy8gW1RlbnRhciBhdHVhbGl6YXIgb3MgdG9rZW5zXVxyXG4gICAgICAgIGNvbnN0IHJlZnJlc2hSZXNwb25zZSA9IGF3YWl0IEh0dHBDbGllbnQoJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvcmVmcmVzaCcsIHtcclxuICAgICAgICAgIG1ldGhvZDogJ0dFVCcsXHJcbiAgICAgICAgICAvLyBib2R5OiBpc1NlcnZlciA/IHsgcmVmcmVzaF90b2tlbjogY3VycmVudFJlZnJlc2hUb2tlbiB9IDogdW5kZWZpbmVkLFxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBjb25zb2xlLmxvZyhcIjEgLT4gXCIsIHJlZnJlc2hSZXNwb25zZSlcclxuXHJcbiAgICAgICAgY29uc3QgbmV3QWNjZXNzVG9rZW4gPSByZWZyZXNoUmVzcG9uc2UuYm9keS5kYXRhLmFjY2Vzc190b2tlbjtcclxuICAgICAgICBjb25zdCBuZXdSZWZyZXNoVG9rZW4gPSByZWZyZXNoUmVzcG9uc2UuYm9keS5kYXRhLnJlZnJlc2hfdG9rZW47ICBcclxuICAgICAgICAvLyBbR3VhcmRhIG9zIFRva2Vuc11cclxuICAgICAgICBpZihpc1NlcnZlcikge1xyXG4gICAgICAgICAgbm9va2llcy5zZXQoZmV0Y2hPcHRpb25zLmN0eCwgJ1JFRlJFU0hfVE9LRU5fTkFNRScsIG5ld1JlZnJlc2hUb2tlbiwge1xyXG4gICAgICAgICAgICBodHRwT25seTogdHJ1ZSxcclxuICAgICAgICAgICAgc2FtZVNpdGU6ICdsYXgnLFxyXG4gICAgICAgICAgICBwYXRoOiAnLydcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRva2VuU2VydmljZS5zYXZlKG5ld0FjY2Vzc1Rva2VuKTtcclxuICAgICAgICAvLyBbVGVudGFyIHJvZGFyIG8gcmVxdWVzdCBhbnRlcmlvcl1cclxuICAgICAgICBjb25zdCByZXRyeVJlc3BvbnNlID0gYXdhaXQgSHR0cENsaWVudChmZXRjaFVybCwge1xyXG4gICAgICAgICAgLi4ub3B0aW9ucyxcclxuICAgICAgICAgIHJlZnJlc2g6IGZhbHNlLFxyXG4gICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHtuZXdBY2Nlc3NUb2tlbn1gXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3JldHJ5UmVzcG9uc2UnLCByZXRyeVJlc3BvbnNlKTtcclxuICAgICAgICByZXR1cm4gcmV0cnlSZXNwb25zZTtcclxuXHJcbiAgICAgIH0gY2F0Y2goZXJyKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgICAgIHJldHVybiByZXNwb25zZTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbn0iXSwibmFtZXMiOlsibm9va2llcyIsInRva2VuU2VydmljZSIsIkh0dHBDbGllbnQiLCJmZXRjaFVybCIsImZldGNoT3B0aW9ucyIsImRlZmF1bHRIZWFkZXJzIiwiaGVhZGVycyIsIm9wdGlvbnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImZldGNoIiwidGhlbiIsInJlc3Bvc3RhRG9TZXJ2aWRvciIsIm9rIiwic3RhdHVzIiwic3RhdHVzVGV4dCIsImpzb24iLCJyZXNwb25zZSIsInJlZnJlc2giLCJjb25zb2xlIiwibG9nIiwicmVmcmVzaFJlc3BvbnNlIiwibWV0aG9kIiwibmV3QWNjZXNzVG9rZW4iLCJkYXRhIiwiYWNjZXNzX3Rva2VuIiwibmV3UmVmcmVzaFRva2VuIiwicmVmcmVzaF90b2tlbiIsImlzU2VydmVyIiwic2V0IiwiY3R4IiwiaHR0cE9ubHkiLCJzYW1lU2l0ZSIsInBhdGgiLCJzYXZlIiwicmV0cnlSZXNwb25zZSIsImVyciIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./services/auth/HttpClient.js\n"));

/***/ })

});