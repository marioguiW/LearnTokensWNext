"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./services/auth/HttpClient.js":
/*!*************************************!*\
  !*** ./services/auth/HttpClient.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpClient: function() { return /* binding */ HttpClient; }\n/* harmony export */ });\n/* harmony import */ var nookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nookies */ \"./node_modules/nookies/dist/index.js\");\n/* harmony import */ var nookies__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(nookies__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _services_auth_tokenService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../services/auth/tokenService */ \"./services/auth/tokenService.js\");\n// Arquitetura Hexagonal\n\n\n// Ports & Adapters\nasync function HttpClient(fetchUrl) {\n    let fetchOptions = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const defaultHeaders = fetchOptions.headers || {};\n    const options = {\n        ...fetchOptions,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...defaultHeaders\n        },\n        body: fetchOptions.body ? JSON.stringify(fetchOptions.body) : null\n    };\n    return fetch(fetchUrl, options).then(async (respostaDoServidor)=>{\n        return {\n            ok: respostaDoServidor.ok,\n            status: respostaDoServidor.status,\n            statusText: respostaDoServidor.statusText,\n            body: await respostaDoServidor.json()\n        };\n    }).then(async (response)=>{\n        if (!fetchOptions.refresh) return response;\n        if (response.status !== 401) return response;\n        console.log(\"Middleware: Rodar c\\xf3digo para atualizar o token\");\n        const isServer = Boolean(fetchOptions === null || fetchOptions === void 0 ? void 0 : fetchOptions.ctx);\n        // console.log(\"Testando\",fetchOptions?.ctx?.req?.cookies)\n        // const currentRefreshToken = fetchOptions?.ctx?.req?.cookies\n        // console.log(\"Current\", currentRefreshToken)\n        try {\n            // [Tentar atualizar os tokens]\n            const refreshResponse = await HttpClient(\"http://localhost:3000/api/refresh\", {\n                method: \"GET\"\n            });\n            console.log(\"1 -> \", refreshResponse);\n            const newAccessToken = refreshResponse.body.data.respostaRefresh.access_token;\n            console.log(\"tokenService.save(newAccessToken);\", newAccessToken);\n            const newRefreshToken = refreshResponse.body.data.respostaRefresh.refresh_token;\n            _services_auth_tokenService__WEBPACK_IMPORTED_MODULE_1__.tokenService.save(newAccessToken);\n            // [Guarda os Tokens]\n            // if(isServer) {\n            //   nookies.set(fetchOptions.ctx, 'REFRESH_TOKEN_NAME', newRefreshToken, {\n            //     httpOnly: true,\n            //     sameSite: 'lax',\n            //   })\n            // // }\n            // tokenService.save(newAccessToken);\n            // [Tentar rodar o request anterior]\n            const retryResponse = await HttpClient(fetchUrl, {\n                ...options,\n                refresh: false,\n                headers: {\n                    \"Authorization\": \"Bearer \".concat(newAccessToken)\n                }\n            });\n            // console.log('retryResponse', retryResponse);\n            return retryResponse;\n        } catch (err) {\n            console.error(err);\n            return response;\n        }\n    });\n}\n_c = HttpClient;\nvar _c;\n$RefreshReg$(_c, \"HttpClient\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zZXJ2aWNlcy9hdXRoL0h0dHBDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHdCQUF3QjtBQUNNO0FBQ2tDO0FBRWhFLG1CQUFtQjtBQUNaLGVBQWVFLFdBQVdDLFFBQVE7UUFBRUMsZUFBQUEsaUVBQWUsQ0FBQztJQUN6RCxNQUFNQyxpQkFBaUJELGFBQWFFLE9BQU8sSUFBSSxDQUFDO0lBQ2hELE1BQU1DLFVBQVU7UUFDZCxHQUFHSCxZQUFZO1FBQ2ZFLFNBQVM7WUFDUCxnQkFBZ0I7WUFDaEIsR0FBR0QsY0FBYztRQUNuQjtRQUNBRyxNQUFNSixhQUFhSSxJQUFJLEdBQUdDLEtBQUtDLFNBQVMsQ0FBQ04sYUFBYUksSUFBSSxJQUFJO0lBQ2hFO0lBQ0EsT0FBT0csTUFBTVIsVUFBVUksU0FDcEJLLElBQUksQ0FBQyxPQUFPQztRQUNYLE9BQU87WUFDTEMsSUFBSUQsbUJBQW1CQyxFQUFFO1lBQ3pCQyxRQUFRRixtQkFBbUJFLE1BQU07WUFDakNDLFlBQVlILG1CQUFtQkcsVUFBVTtZQUN6Q1IsTUFBTSxNQUFNSyxtQkFBbUJJLElBQUk7UUFDckM7SUFDRixHQUNDTCxJQUFJLENBQUMsT0FBT007UUFDWCxJQUFHLENBQUNkLGFBQWFlLE9BQU8sRUFBRSxPQUFPRDtRQUNqQyxJQUFHQSxTQUFTSCxNQUFNLEtBQUssS0FBSyxPQUFPRztRQUNuQ0UsUUFBUUMsR0FBRyxDQUFDO1FBRVosTUFBTUMsV0FBV0MsUUFBUW5CLHlCQUFBQSxtQ0FBQUEsYUFBY29CLEdBQUc7UUFFMUMsMERBQTBEO1FBRTFELDhEQUE4RDtRQUM5RCw4Q0FBOEM7UUFFOUMsSUFBSTtZQUNGLCtCQUErQjtZQUMvQixNQUFNQyxrQkFBa0IsTUFBTXZCLFdBQVcscUNBQXFDO2dCQUM1RXdCLFFBQVE7WUFFVjtZQUVBTixRQUFRQyxHQUFHLENBQUMsU0FBU0k7WUFFckIsTUFBTUUsaUJBQWlCRixnQkFBZ0JqQixJQUFJLENBQUNvQixJQUFJLENBQUNDLGVBQWUsQ0FBQ0MsWUFBWTtZQUM3RVYsUUFBUUMsR0FBRyxDQUFDLHNDQUFzQ007WUFDbEQsTUFBTUksa0JBQWtCTixnQkFBZ0JqQixJQUFJLENBQUNvQixJQUFJLENBQUNDLGVBQWUsQ0FBQ0csYUFBYTtZQUcvRS9CLHFFQUFZQSxDQUFDZ0MsSUFBSSxDQUFDTjtZQUVsQixxQkFBcUI7WUFDckIsaUJBQWlCO1lBQ2pCLDJFQUEyRTtZQUMzRSxzQkFBc0I7WUFDdEIsdUJBQXVCO1lBQ3ZCLE9BQU87WUFDUCxPQUFPO1lBQ1AscUNBQXFDO1lBQ3JDLG9DQUFvQztZQUVwQyxNQUFNTyxnQkFBZ0IsTUFBTWhDLFdBQVdDLFVBQVU7Z0JBQy9DLEdBQUdJLE9BQU87Z0JBQ1ZZLFNBQVM7Z0JBQ1RiLFNBQVM7b0JBQ1AsaUJBQWlCLFVBQXlCLE9BQWZxQjtnQkFDN0I7WUFDRjtZQUNBLCtDQUErQztZQUMvQyxPQUFPTztRQUVULEVBQUUsT0FBTUMsS0FBSztZQUNYZixRQUFRZ0IsS0FBSyxDQUFDRDtZQUNkLE9BQU9qQjtRQUNUO0lBQ0Y7QUFDSjtLQXhFc0JoQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zZXJ2aWNlcy9hdXRoL0h0dHBDbGllbnQuanM/YzFmNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcnF1aXRldHVyYSBIZXhhZ29uYWxcclxuaW1wb3J0IG5vb2tpZXMgZnJvbSAnbm9va2llcyc7XHJcbmltcG9ydCB7IHRva2VuU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2F1dGgvdG9rZW5TZXJ2aWNlJztcclxuXHJcbi8vIFBvcnRzICYgQWRhcHRlcnNcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEh0dHBDbGllbnQoZmV0Y2hVcmwsIGZldGNoT3B0aW9ucyA9IHt9KSB7XHJcbiAgY29uc3QgZGVmYXVsdEhlYWRlcnMgPSBmZXRjaE9wdGlvbnMuaGVhZGVycyB8fCB7fTtcclxuICBjb25zdCBvcHRpb25zID0ge1xyXG4gICAgLi4uZmV0Y2hPcHRpb25zLFxyXG4gICAgaGVhZGVyczoge1xyXG4gICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICAuLi5kZWZhdWx0SGVhZGVycyxcclxuICAgIH0sXHJcbiAgICBib2R5OiBmZXRjaE9wdGlvbnMuYm9keSA/IEpTT04uc3RyaW5naWZ5KGZldGNoT3B0aW9ucy5ib2R5KSA6IG51bGwsXHJcbiAgfTtcclxuICByZXR1cm4gZmV0Y2goZmV0Y2hVcmwsIG9wdGlvbnMpXHJcbiAgICAudGhlbihhc3luYyAocmVzcG9zdGFEb1NlcnZpZG9yKSA9PiB7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgb2s6IHJlc3Bvc3RhRG9TZXJ2aWRvci5vayxcclxuICAgICAgICBzdGF0dXM6IHJlc3Bvc3RhRG9TZXJ2aWRvci5zdGF0dXMsXHJcbiAgICAgICAgc3RhdHVzVGV4dDogcmVzcG9zdGFEb1NlcnZpZG9yLnN0YXR1c1RleHQsXHJcbiAgICAgICAgYm9keTogYXdhaXQgcmVzcG9zdGFEb1NlcnZpZG9yLmpzb24oKSxcclxuICAgICAgfVxyXG4gICAgfSlcclxuICAgIC50aGVuKGFzeW5jIChyZXNwb25zZSkgPT4ge1xyXG4gICAgICBpZighZmV0Y2hPcHRpb25zLnJlZnJlc2gpIHJldHVybiByZXNwb25zZTtcclxuICAgICAgaWYocmVzcG9uc2Uuc3RhdHVzICE9PSA0MDEpIHJldHVybiByZXNwb25zZTtcclxuICAgICAgY29uc29sZS5sb2coJ01pZGRsZXdhcmU6IFJvZGFyIGPDs2RpZ28gcGFyYSBhdHVhbGl6YXIgbyB0b2tlbicpO1xyXG4gICAgICBcclxuICAgICAgY29uc3QgaXNTZXJ2ZXIgPSBCb29sZWFuKGZldGNoT3B0aW9ucz8uY3R4KTtcclxuXHJcbiAgICAgIC8vIGNvbnNvbGUubG9nKFwiVGVzdGFuZG9cIixmZXRjaE9wdGlvbnM/LmN0eD8ucmVxPy5jb29raWVzKVxyXG4gICAgICBcclxuICAgICAgLy8gY29uc3QgY3VycmVudFJlZnJlc2hUb2tlbiA9IGZldGNoT3B0aW9ucz8uY3R4Py5yZXE/LmNvb2tpZXNcclxuICAgICAgLy8gY29uc29sZS5sb2coXCJDdXJyZW50XCIsIGN1cnJlbnRSZWZyZXNoVG9rZW4pXHJcblxyXG4gICAgICB0cnkge1xyXG4gICAgICAgIC8vIFtUZW50YXIgYXR1YWxpemFyIG9zIHRva2Vuc11cclxuICAgICAgICBjb25zdCByZWZyZXNoUmVzcG9uc2UgPSBhd2FpdCBIdHRwQ2xpZW50KCdodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL3JlZnJlc2gnLCB7XHJcbiAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxyXG4gICAgICAgICAgLy8gYm9keTogaXNTZXJ2ZXIgPyB7IHJlZnJlc2hfdG9rZW46IGN1cnJlbnRSZWZyZXNoVG9rZW4gfSA6IHVuZGVmaW5lZCxcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgY29uc29sZS5sb2coXCIxIC0+IFwiLCByZWZyZXNoUmVzcG9uc2UpXHJcblxyXG4gICAgICAgIGNvbnN0IG5ld0FjY2Vzc1Rva2VuID0gcmVmcmVzaFJlc3BvbnNlLmJvZHkuZGF0YS5yZXNwb3N0YVJlZnJlc2guYWNjZXNzX3Rva2VuO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwidG9rZW5TZXJ2aWNlLnNhdmUobmV3QWNjZXNzVG9rZW4pO1wiLCBuZXdBY2Nlc3NUb2tlbilcclxuICAgICAgICBjb25zdCBuZXdSZWZyZXNoVG9rZW4gPSByZWZyZXNoUmVzcG9uc2UuYm9keS5kYXRhLnJlc3Bvc3RhUmVmcmVzaC5yZWZyZXNoX3Rva2VuOyAgXHJcblxyXG5cclxuICAgICAgICB0b2tlblNlcnZpY2Uuc2F2ZShuZXdBY2Nlc3NUb2tlbik7XHJcblxyXG4gICAgICAgIC8vIFtHdWFyZGEgb3MgVG9rZW5zXVxyXG4gICAgICAgIC8vIGlmKGlzU2VydmVyKSB7XHJcbiAgICAgICAgLy8gICBub29raWVzLnNldChmZXRjaE9wdGlvbnMuY3R4LCAnUkVGUkVTSF9UT0tFTl9OQU1FJywgbmV3UmVmcmVzaFRva2VuLCB7XHJcbiAgICAgICAgLy8gICAgIGh0dHBPbmx5OiB0cnVlLFxyXG4gICAgICAgIC8vICAgICBzYW1lU2l0ZTogJ2xheCcsXHJcbiAgICAgICAgLy8gICB9KVxyXG4gICAgICAgIC8vIC8vIH1cclxuICAgICAgICAvLyB0b2tlblNlcnZpY2Uuc2F2ZShuZXdBY2Nlc3NUb2tlbik7XHJcbiAgICAgICAgLy8gW1RlbnRhciByb2RhciBvIHJlcXVlc3QgYW50ZXJpb3JdXHJcblxyXG4gICAgICAgIGNvbnN0IHJldHJ5UmVzcG9uc2UgPSBhd2FpdCBIdHRwQ2xpZW50KGZldGNoVXJsLCB7XHJcbiAgICAgICAgICAuLi5vcHRpb25zLFxyXG4gICAgICAgICAgcmVmcmVzaDogZmFsc2UsXHJcbiAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke25ld0FjY2Vzc1Rva2VufWBcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZygncmV0cnlSZXNwb25zZScsIHJldHJ5UmVzcG9uc2UpO1xyXG4gICAgICAgIHJldHVybiByZXRyeVJlc3BvbnNlO1xyXG5cclxuICAgICAgfSBjYXRjaChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxufSJdLCJuYW1lcyI6WyJub29raWVzIiwidG9rZW5TZXJ2aWNlIiwiSHR0cENsaWVudCIsImZldGNoVXJsIiwiZmV0Y2hPcHRpb25zIiwiZGVmYXVsdEhlYWRlcnMiLCJoZWFkZXJzIiwib3B0aW9ucyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9zdGFEb1NlcnZpZG9yIiwib2siLCJzdGF0dXMiLCJzdGF0dXNUZXh0IiwianNvbiIsInJlc3BvbnNlIiwicmVmcmVzaCIsImNvbnNvbGUiLCJsb2ciLCJpc1NlcnZlciIsIkJvb2xlYW4iLCJjdHgiLCJyZWZyZXNoUmVzcG9uc2UiLCJtZXRob2QiLCJuZXdBY2Nlc3NUb2tlbiIsImRhdGEiLCJyZXNwb3N0YVJlZnJlc2giLCJhY2Nlc3NfdG9rZW4iLCJuZXdSZWZyZXNoVG9rZW4iLCJyZWZyZXNoX3Rva2VuIiwic2F2ZSIsInJldHJ5UmVzcG9uc2UiLCJlcnIiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./services/auth/HttpClient.js\n"));

/***/ })

});